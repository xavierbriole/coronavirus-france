{"version":3,"sources":["MuiComponents/NavigationBar.js","MuiComponents/Theme.js","MuiComponents/Dialog.js","MuiComponents/Panel.js","MuiComponents/List.js","MuiComponents/Snack.js","UI/Menu.js","UI/Frame.js","UI/FAQ.js","UI/Share.js","UI/Attestation.js","Helpers/storage.js","UI/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","zIndex","contentShift","PersistentDrawerLeft","title","menu","children","classes","useTheme","React","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","createMuiTheme","palette","primary","main","green","secondary","grey","text","background","default","typography","fontFamily","Theme","this","props","ThemeProvider","flex","Transition","ref","Slide","FullScreenDialog","onClose","Dialog","fullScreen","TransitionComponent","backgroundColor","overflow","heading","fontSize","pxToRem","fontWeight","fontWeightRegular","SimpleAccordion","datas","onPanelOpen","map","data","index","Accordion","key","onChange","event","expanded","question","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","answer","listSection","ul","subheader","PinnedSubheaderList","items","List","item","ListSubheader","subheaderTitle","contents","ListItem","url","button","ListItemAvatar","Badge","badgeContent","invisible","new","ListItemText","updated","PositionedSnackbar","message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","style","maxWidth","elevation","severity","Menu","onItemClick","onButtonClick","bind","ListItemIcon","QuestionAnswer","CloudDownload","Link","href","target","packageJson","version","Date","getFullYear","Frame","dangerouslySetInnerHTML","__html","isMobile","FAQ","ReactGA","category","action","label","FAQData","faq","onQuestionClick","Share","state","displaySnack","setState","Container","Grid","alignContent","container","window","location","onCopy","handleCopyButton","Input","value","disabled","FileCopy","handleClose","EmailShareButton","subject","body","EmailIcon","size","round","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","Attestation","subheaderId","contentId","attests","files","Storage","localStorage","getItem","error","console","setItem","App","UA","displaySnackVersion","shouldDisplaySnack","get","modalOpen","snackOpen","currentItem","undefined","hostname","initialize","pageview","pathname","set","handleModalClose","renderModalContent","underline","role","margin","handleModalOpen","handleSnackClose","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9e813ebd.chunk.js","sourcesContent":["// @flow\n\nimport * as React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n    zIndex: 1,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}))\n\ntype Props = {|\n  title: React.Node,\n  menu: React.Node,\n  children: React.Node,\n|}\n\nexport default function PersistentDrawerLeft({\n  title,\n  menu,\n  children,\n}: Props): React$Element<any> {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [open, setOpen] = React.useState(false)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position='fixed'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon color='secondary' />\n          </IconButton>\n          <Typography variant='h6' noWrap>\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant='persistent'\n        anchor='left'\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon color='secondary' />\n            ) : (\n              <ChevronRightIcon color='secondary' />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        {menu}\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {children}\n      </main>\n    </div>\n  )\n}\n","// @flow\n\nimport * as React from 'react'\nimport { createMuiTheme } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { grey, green } from '@material-ui/core/colors'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: green['700'],\n    },\n    secondary: {\n      main: grey['50'],\n    },\n    text: {\n      primary: grey['50'],\n      secondary: grey['50'],\n    },\n    background: {\n      default: grey['A400'],\n      paper: grey['A400'],\n    },\n  },\n  typography: {\n    fontFamily: \"'Work Sans', sans-serif\",\n  },\n})\n\ntype Props = {|\n  children: React.ChildrenArray<any>,\n|}\n\nexport default class Theme extends React.Component<Props> {\n  render(): React.Node {\n    const { children } = this.props\n\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />\n})\n\ntype Props = {|\n  title: string,\n  open: boolean,\n  onClose: () => void,\n  children: ?React.Node,\n|}\n\nexport default function FullScreenDialog({\n  title,\n  open,\n  onClose,\n  children,\n}: Props): React$Element<any> {\n  const classes = useStyles()\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={onClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            color='secondary'\n            onClick={onClose}\n            aria-label='close'\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' color='secondary' className={classes.title}>\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {children}\n    </Dialog>\n  )\n}\n","// @flow\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}))\n\ntype Props = {|\n  datas: Array<{\n    question: string,\n    answer: string,\n  }>,\n  onPanelOpen: (question: string) => void,\n|}\n\nexport default function SimpleAccordion({\n  datas,\n  onPanelOpen,\n}: Props): React$Element<any> {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      {datas.map((data, index) => {\n        return (\n          <Accordion\n            key={index}\n            onChange={(event, expanded) => {\n              if (!expanded) {\n                return\n              }\n\n              onPanelOpen(data.question)\n            }}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls={`panel${index}-content`}\n              id={`panel${index}-header`}\n            >\n              <Typography className={classes.heading}>\n                {data.question}\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography>{data.answer}</Typography>\n            </AccordionDetails>\n          </Accordion>\n        )\n      })}\n    </div>\n  )\n}\n","// @flow\n\nimport * as React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport ListAvatar from '@material-ui/core/Avatar'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf'\nimport Badge from '@material-ui/core/Badge'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n  },\n  listSection: {\n    backgroundColor: 'inherit',\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0,\n  },\n  subheader: {\n    zIndex: 2,\n  },\n}))\n\ntype Props = {|\n  items: Array<{\n    id: string,\n    subheaderTitle: string,\n    contents: Array<{\n      id: string,\n      title: string,\n      updated: string,\n      url: string,\n      new: boolean,\n    }>,\n  }>,\n  onClick: (subheaderId: string, contentId: string, url: string) => void,\n|}\n\nexport default function PinnedSubheaderList({\n  items,\n  onClick,\n}: Props): React$Element<any> {\n  const classes = useStyles()\n\n  return (\n    <List className={classes.root} subheader={<li />}>\n      {items.map((item) => (\n        <li key={`section-${item.id}`} className={classes.listSection}>\n          <ul className={classes.ul}>\n            <ListSubheader className={classes.subheader}>\n              {item.subheaderTitle}\n            </ListSubheader>\n            {item.contents.map((content) => (\n              <ListItem\n                key={`item-${content.id}`}\n                onClick={() => onClick(item.id, content.id, content.url)}\n                button\n              >\n                <ListItemAvatar>\n                  <Badge\n                    color='error'\n                    badgeContent='New'\n                    invisible={!content.new}\n                  >\n                    <ListAvatar>\n                      <PictureAsPdfIcon />\n                    </ListAvatar>\n                  </Badge>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={content.title}\n                  secondary={content.updated}\n                />\n              </ListItem>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </List>\n  )\n}\n","// @flow\n\nimport * as React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\n\ntype Props = {|\n  message: string,\n  open: boolean,\n  onClose: () => void,\n|}\n\nexport default function PositionedSnackbar({\n  message,\n  open,\n  onClose,\n}: Props): React$Element<any> {\n  const handleClose = () => {\n    onClose()\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={open}\n      autoHideDuration={20000}\n      style={{ maxWidth: 300 }}\n    >\n      <MuiAlert\n        elevation={6}\n        variant='filled'\n        onClose={handleClose}\n        severity='error'\n      >\n        {message}\n      </MuiAlert>\n    </Snackbar>\n  )\n}\n","// @flow\n\nimport * as React from 'react'\nimport {\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  Link,\n  Badge,\n} from '@material-ui/core'\nimport { QuestionAnswer, Share, CloudDownload } from '@material-ui/icons'\nimport packageJson from '../../package.json'\n\ntype Props = {|\n  onItemClick: (item: { id: string, title: string }) => void,\n|}\n\nexport default class Menu extends React.Component<Props> {\n  onButtonClick(item: { id: string, title: string }) {\n    const { onItemClick } = this.props\n\n    onItemClick(item)\n  }\n\n  render(): React.Node {\n    return (\n      <React.Fragment>\n        <List>\n          <ListItem\n            button\n            key='faq'\n            onClick={this.onButtonClick.bind(this, {\n              id: 'faq',\n              title: 'Questions / Réponses',\n            })}\n          >\n            <ListItemIcon>\n              <QuestionAnswer color='secondary' />\n            </ListItemIcon>\n            <ListItemText primary='FAQ' />\n          </ListItem>\n          <ListItem\n            button\n            key='attest'\n            onClick={this.onButtonClick.bind(this, {\n              id: 'attest',\n              title: 'Télécharger une attestation',\n            })}\n          >\n            <ListItemIcon>\n              <Badge color='error' badgeContent={3}>\n                <CloudDownload color='secondary' />\n              </Badge>\n            </ListItemIcon>\n            <ListItemText primary='Attestations' />\n          </ListItem>\n          <ListItem\n            button\n            key='share'\n            onClick={this.onButtonClick.bind(this, {\n              id: 'share',\n              title: 'Partager',\n            })}\n          >\n            <ListItemIcon>\n              <Share color='secondary' />\n            </ListItemIcon>\n            <ListItemText primary='Partager' />\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem key='github'>\n            <ListItemText>\n              <Typography variant='caption' color='textPrimary'>\n                <Link\n                  href='https://github.com/xavierbriole/coronavirus-france'\n                  target='_blank'\n                >\n                  GitHub\n                </Link>\n              </Typography>\n            </ListItemText>\n          </ListItem>\n          <ListItem key='credits'>\n            <ListItemText>\n              <Typography variant='caption' color='textPrimary'>\n                <Link href='https://www.esrifrance.fr/' target='_blank'>\n                  Carte réalisée par Esri France\n                </Link>\n              </Typography>\n            </ListItemText>\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem key='version'>\n            <ListItemText>\n              <Typography variant='caption' color='textPrimary'>\n                {`Version ${packageJson.version}`}\n              </Typography>\n            </ListItemText>\n          </ListItem>\n          <ListItem key='author'>\n            <ListItemText>\n              <Typography variant='caption' color='textPrimary'>\n                {`${new Date().getFullYear()} © Xavier B.`}\n              </Typography>\n            </ListItemText>\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem key='cookies'>\n            <ListItemText>\n              <Typography variant='caption' color='textPrimary'>\n                Ce site utilise les cookies pour améliorer votre expérience de\n                navigation.\n              </Typography>\n            </ListItemText>\n          </ListItem>\n        </List>\n      </React.Fragment>\n    )\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport { isMobile } from 'react-device-detect'\n\nexport default class Frame extends React.Component<{}> {\n  render(): React.Node {\n    return (\n      <div\n        className='iframe-wrapper'\n        dangerouslySetInnerHTML={{\n          __html: `<iframe src=\"https://mapthenews.maps.arcgis.com/apps/opsdashboard/index.html#/${\n            isMobile\n              ? 'bae8aaa7a0b14261b4621c31db410c44'\n              : '5df19abcf8714bc590a3b143e14a548c'\n          }\" class=\"iframe\">`,\n        }}\n      ></div>\n    )\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport ReactGA from 'react-ga'\nimport { Panel } from '../MuiComponents'\nimport FAQData from '../FAQData.json'\n\nexport default class FAQ extends React.Component<{}> {\n  onQuestionClick(title: string) {\n    ReactGA.event({ category: 'user', action: 'question-click', label: title })\n  }\n\n  render(): React.Node {\n    return (\n      <Panel\n        datas={FAQData.faq}\n        onPanelOpen={this.onQuestionClick.bind(this)}\n      />\n    )\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport {\n  EmailShareButton,\n  EmailIcon,\n  FacebookShareButton,\n  FacebookIcon,\n  LinkedinShareButton,\n  LinkedinIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from 'react-share'\nimport { Grid, Input, IconButton, Snackbar, Container } from '@material-ui/core'\nimport { FileCopy } from '@material-ui/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport ReactGA from 'react-ga'\n\ntype State = {|\n  displaySnack: boolean,\n|}\n\nexport default class Share extends React.Component<{}, State> {\n  constructor(props: {}) {\n    super(props)\n\n    this.state = { displaySnack: false }\n  }\n\n  handleCopyButton() {\n    this.setState({ displaySnack: true })\n\n    ReactGA.event({\n      category: 'user',\n      action: 'copy-to-clipboard-click',\n    })\n  }\n\n  handleClose() {\n    this.setState({ displaySnack: false })\n  }\n\n  render(): React.Node {\n    const { displaySnack } = this.state\n\n    return (\n      <Container\n        style={{ padding: 20, position: 'relative', overflow: 'auto' }}\n      >\n        <Grid\n          direction='column'\n          alignContent='center'\n          alignItems='center'\n          container\n        >\n          <Grid item>\n            <CopyToClipboard\n              text={window.location}\n              onCopy={this.handleCopyButton.bind(this)}\n            >\n              <Input\n                value={window.location}\n                disabled\n                style={{ color: '#ffffff' }}\n              />\n            </CopyToClipboard>\n            <CopyToClipboard\n              text={window.location}\n              onCopy={this.handleCopyButton.bind(this)}\n            >\n              <IconButton color='secondary'>\n                <FileCopy />\n              </IconButton>\n            </CopyToClipboard>\n            <Snackbar\n              open={displaySnack}\n              onClose={this.handleClose.bind(this)}\n              message='Copié dans le presse-papier !'\n              autoHideDuration={3000}\n            />\n          </Grid>\n          <Grid item>\n            <IconButton>\n              <EmailShareButton\n                url={window.location}\n                subject='Coronavirus en France - Carte en temps réel'\n                body='Coronavirus: évolution de la situation en direct en France et dans les DOM-TOM'\n              >\n                <EmailIcon size={32} round />\n              </EmailShareButton>\n            </IconButton>\n            <IconButton>\n              <FacebookShareButton url={window.location}>\n                <FacebookIcon size={32} round />\n              </FacebookShareButton>\n            </IconButton>\n            <IconButton>\n              <LinkedinShareButton url={window.location}>\n                <LinkedinIcon size={32} round />\n              </LinkedinShareButton>\n            </IconButton>\n            <IconButton>\n              <TwitterShareButton url={window.location}>\n                <TwitterIcon size={32} round />\n              </TwitterShareButton>\n            </IconButton>\n            <IconButton>\n              <WhatsappShareButton url={window.location}>\n                <WhatsappIcon size={32} round />\n              </WhatsappShareButton>\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Container>\n    )\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport { List } from '../MuiComponents'\nimport ReactGA from 'react-ga'\nimport attests from '../attests.json'\n\nexport default class Attestation extends React.Component<{}> {\n  onItemClick(subheaderId: string, contentId: string, url: string) {\n    ReactGA.event({\n      category: 'user',\n      action: 'download',\n      label: `${subheaderId === '' ? '' : `${subheaderId}-`}${contentId}`,\n    })\n\n    window.open(\n      `${window.location}files/${\n        subheaderId === '' ? 'confinement' : subheaderId\n      }/${url}`\n    )\n  }\n\n  render(): React.Node {\n    return <List onClick={this.onItemClick.bind(this)} items={attests.files} />\n  }\n}\n","// @flow\n\nexport default class Storage {\n  static get(key: string): string | null {\n    try {\n      return window.localStorage.getItem(key)\n    } catch (error) {\n      console.error(`Error while getting data from localStorage`, error)\n      return null\n    }\n  }\n\n  static set(key: string, value: string): void {\n    try {\n      window.localStorage.setItem(key, value)\n    } catch (error) {\n      console.error(`Error while setting data from localStorage`, error)\n    }\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport ReactGA from 'react-ga'\nimport { Theme, NavigationBar, Dialog, Snack } from '../MuiComponents'\nimport Menu from './Menu'\nimport Frame from './Frame'\nimport FAQ from './FAQ'\nimport Share from './Share'\nimport Attestation from './Attestation'\nimport { Link } from '@material-ui/core'\nimport Storage from '../Helpers/storage'\nimport packageJson from '../../package.json'\n\ntype State = {|\n  modalOpen: boolean,\n  snackOpen: boolean,\n  currentItem?: { id: string, title: string },\n|}\n\nexport default class App extends React.Component<{}, State> {\n  UA: string\n  displaySnackVersion: string\n\n  constructor(props: {}) {\n    super(props)\n\n    this.UA = 'UA-127796557-2'\n    this.displaySnackVersion = `displaySnack-${packageJson.version}`\n\n    const shouldDisplaySnack = Storage.get(this.displaySnackVersion) === null\n\n    this.state = {\n      modalOpen: false,\n      snackOpen: shouldDisplaySnack,\n      currentItem: undefined,\n    }\n  }\n\n  componentDidMount() {\n    if (\n      window.location.hostname === 'localhost' ||\n      window.location.hostname === '127.0.0.1'\n    ) {\n      window[`ga-disable-${this.UA}`] = true\n    }\n\n    ReactGA.initialize(this.UA)\n    ReactGA.pageview(window.location.pathname)\n  }\n\n  handleModalOpen(item: { id: string, title: string }) {\n    this.setState(\n      {\n        modalOpen: true,\n        currentItem: { id: item.id, title: item.title },\n      },\n      () => {\n        ReactGA.event({\n          category: 'user',\n          action: 'open-modal',\n          label: item.id,\n        })\n      }\n    )\n  }\n\n  handleModalClose() {\n    this.setState({ modalOpen: false, currentItem: undefined }, () => {\n      ReactGA.event({ category: 'user', action: 'close-modal' })\n    })\n  }\n\n  handleSnackClose() {\n    this.setState({ snackOpen: false }, () => {\n      Storage.set(this.displaySnackVersion, 'false')\n    })\n  }\n\n  renderModalContent(): ?React.Node {\n    const { currentItem } = this.state\n\n    if (currentItem === undefined) {\n      return null\n    }\n\n    switch (currentItem.id) {\n      case 'faq':\n        return <FAQ />\n      case 'share':\n        return <Share />\n      case 'attest':\n        return <Attestation />\n      default:\n        break\n    }\n  }\n\n  render(): React.Node {\n    const { modalOpen, snackOpen, currentItem } = this.state\n\n    return (\n      <Theme>\n        <React.Fragment>\n          <Dialog\n            title={currentItem ? currentItem.title : ''}\n            open={modalOpen}\n            onClose={this.handleModalClose.bind(this)}\n          >\n            {this.renderModalContent()}\n          </Dialog>\n          <NavigationBar\n            title={\n              <Link href={window.location} color='secondary' underline='none'>\n                Coronavirus en France\n                <span role='img' aria-label='christmas' style={{ margin: 10 }}>\n                  🎄\n                </span>\n              </Link>\n            }\n            menu={<Menu onItemClick={this.handleModalOpen.bind(this)} />}\n          >\n            <Frame />\n          </NavigationBar>\n          <Snack\n            message='Attestations pour le nouveau couvre-feu disponibles !'\n            onClose={this.handleSnackClose.bind(this)}\n            open={snackOpen}\n          />\n        </React.Fragment>\n      </Theme>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// @flow\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './UI/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}