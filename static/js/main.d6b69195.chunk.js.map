{"version":3,"sources":["MuiComponents/NavigationBar.js","MuiComponents/Theme.js","MuiComponents/Dialog.js","MuiComponents/Panel.js","MuiComponents/List.js","MuiComponents/Snack.js","UI/Menu.js","UI/Frame.js","UI/FAQ.js","UI/Share.js","UI/Attestation.js","UI/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","zIndex","contentShift","PersistentDrawerLeft","title","menu","children","classes","useTheme","React","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","createMuiTheme","palette","primary","main","orange","secondary","text","background","default","grey","typography","fontFamily","Theme","this","props","ThemeProvider","flex","Transition","ref","Slide","FullScreenDialog","onClose","Dialog","fullScreen","TransitionComponent","heading","fontSize","pxToRem","fontWeight","fontWeightRegular","SimpleAccordion","datas","onPanelOpen","map","data","index","Accordion","key","onChange","event","expanded","question","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","answer","backgroundColor","overflow","listSection","ul","PinnedSubheaderList","items","List","subheader","item","ListSubheader","subheaderTitle","contents","ListItem","url","button","ListItemAvatar","ListItemText","updated","PositionedSnackbar","message","vertical","horizontal","state","setState","Snackbar","anchorOrigin","autoHideDuration","style","maxWidth","action","size","Menu","onItemClick","onButtonClick","bind","ListItemIcon","QuestionAnswer","CloudDownload","packageJson","version","Link","href","target","Frame","dangerouslySetInnerHTML","__html","isMobile","FAQ","ReactGA","category","label","FAQData","faq","onQuestionClick","Share","displaySnack","Container","Grid","alignContent","container","window","location","onCopy","handleCopyButton","Input","value","disabled","FileCopy","handleClose","EmailShareButton","subject","body","EmailIcon","round","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","Attestation","subheaderId","contentId","App","UA","modalOpen","currentItem","undefined","hostname","initialize","pageview","pathname","handleModalClose","renderModalContent","underline","role","margin","handleModalOpen","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.d6b69195.chunk.js","sourcesContent":["// @flow\n\nimport * as React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n    zIndex: 1,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}))\n\ntype Props = {|\n  title: React.Node,\n  menu: React.Node,\n  children: React.Node,\n|}\n\nexport default function PersistentDrawerLeft({\n  title,\n  menu,\n  children,\n}: Props): React$Element<any> {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [open, setOpen] = React.useState(false)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position='fixed'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon color='secondary' />\n          </IconButton>\n          <Typography variant='h6' noWrap>\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant='persistent'\n        anchor='left'\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon color='primary' />\n            ) : (\n              <ChevronRightIcon color='primary' />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        {menu}\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {children}\n      </main>\n    </div>\n  )\n}\n","// @flow\n\nimport * as React from 'react'\nimport { createMuiTheme } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { orange, grey } from '@material-ui/core/colors'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: orange['A700'],\n    },\n    secondary: {\n      main: '#FFFFFF',\n    },\n    text: {\n      primary: '#FFFFFF',\n      secondary: '#FFFFFF',\n    },\n    background: {\n      default: grey['A400'],\n      paper: grey['A400'],\n    },\n  },\n  typography: {\n    fontFamily: \"'Work Sans', sans-serif\",\n  },\n})\n\ntype Props = {|\n  children: React.ChildrenArray<any>,\n|}\n\nexport default class Theme extends React.Component<Props> {\n  render(): React.Node {\n    const { children } = this.props\n\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />\n})\n\ntype Props = {|\n  title: string,\n  open: boolean,\n  onClose: () => void,\n  children: ?React.Node,\n|}\n\nexport default function FullScreenDialog({\n  title,\n  open,\n  onClose,\n  children,\n}: Props): React$Element<any> {\n  const classes = useStyles()\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={onClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            color='secondary'\n            onClick={onClose}\n            aria-label='close'\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' color='secondary' className={classes.title}>\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {children}\n    </Dialog>\n  )\n}\n","// @flow\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}))\n\ntype Props = {|\n  datas: Array<{\n    question: string,\n    answer: string,\n  }>,\n  onPanelOpen: (question: string) => void,\n|}\n\nexport default function SimpleAccordion({\n  datas,\n  onPanelOpen,\n}: Props): React$Element<any> {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      {datas.map((data, index) => {\n        return (\n          <Accordion\n            key={index}\n            onChange={(event, expanded) => {\n              if (!expanded) {\n                return\n              }\n\n              onPanelOpen(data.question)\n            }}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls={`panel${index}-content`}\n              id={`panel${index}-header`}\n            >\n              <Typography className={classes.heading}>\n                {data.question}\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography>{data.answer}</Typography>\n            </AccordionDetails>\n          </Accordion>\n        )\n      })}\n    </div>\n  )\n}\n","// @flow\n\nimport * as React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport ListAvatar from '@material-ui/core/Avatar'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n  },\n  listSection: {\n    backgroundColor: 'inherit',\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0,\n  },\n}))\n\ntype Props = {|\n  items: Array<{\n    id: string,\n    subheaderTitle: string,\n    contents: Array<{\n      id: string,\n      title: string,\n      updated: string,\n      url: string,\n    }>,\n  }>,\n  onClick: (subheaderId: string, contentId: string, url: string) => void,\n|}\n\nexport default function PinnedSubheaderList({\n  items,\n  onClick,\n}: Props): React$Element<any> {\n  const classes = useStyles()\n\n  return (\n    <List className={classes.root} subheader={<li />}>\n      {items.map((item) => (\n        <li key={`section-${item.id}`} className={classes.listSection}>\n          <ul className={classes.ul}>\n            <ListSubheader>{item.subheaderTitle}</ListSubheader>\n            {item.contents.map((content) => (\n              <ListItem\n                key={`item-${content.id}`}\n                onClick={() => onClick(item.id, content.id, content.url)}\n                button\n              >\n                <ListItemAvatar>\n                  <ListAvatar>\n                    <PictureAsPdfIcon />\n                  </ListAvatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={content.title}\n                  secondary={content.updated}\n                />\n              </ListItem>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </List>\n  )\n}\n","// @flow\n\nimport * as React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\ntype Props = {|\n  message: string,\n|}\n\nexport default function PositionedSnackbar({\n  message,\n}: Props): React$Element<any> {\n  const [state, setState] = React.useState({\n    open: true,\n    vertical: 'top',\n    horizontal: 'right',\n  })\n\n  const { vertical, horizontal, open } = state\n\n  const handleClose = () => {\n    setState({ ...state, open: false })\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      message={message}\n      key={vertical + horizontal}\n      autoHideDuration={20000}\n      style={{ maxWidth: 300 }}\n      action={\n        <IconButton\n          size='small'\n          aria-label='close'\n          color='inherit'\n          onClick={handleClose}\n        >\n          <CloseIcon fontSize='small' />\n        </IconButton>\n      }\n    />\n  )\n}\n","// @flow\n\nimport * as React from 'react'\nimport {\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  Link,\n} from '@material-ui/core'\nimport { QuestionAnswer, Share, CloudDownload } from '@material-ui/icons'\nimport packageJson from '../../package.json'\n\ntype Props = {|\n  onItemClick: (item: { id: string, title: string }) => void,\n|}\n\nexport default class Menu extends React.Component<Props> {\n  onButtonClick(item: { id: string, title: string }) {\n    const { onItemClick } = this.props\n\n    onItemClick(item)\n  }\n\n  render(): React.Node {\n    return (\n      <React.Fragment>\n        <List>\n          <ListItem\n            button\n            key='faq'\n            onClick={this.onButtonClick.bind(this, {\n              id: 'faq',\n              title: 'Questions / Réponses',\n            })}\n          >\n            <ListItemIcon>\n              <QuestionAnswer color='primary' />\n            </ListItemIcon>\n            <ListItemText primary='FAQ' />\n          </ListItem>\n          <ListItem\n            button\n            key='attest'\n            onClick={this.onButtonClick.bind(this, {\n              id: 'attest',\n              title: 'Télécharger une attestation',\n            })}\n          >\n            <ListItemIcon>\n              <CloudDownload color='primary' />\n            </ListItemIcon>\n            <ListItemText primary='Attestations' />\n          </ListItem>\n          <ListItem\n            button\n            key='share'\n            onClick={this.onButtonClick.bind(this, {\n              id: 'share',\n              title: 'Partager',\n            })}\n          >\n            <ListItemIcon>\n              <Share color='primary' />\n            </ListItemIcon>\n            <ListItemText primary='Partager' />\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem key='version'>\n            <ListItemText>\n              <Typography variant='caption' color='textPrimary'>\n                {`Version ${packageJson.version}`}\n              </Typography>\n            </ListItemText>\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem key='github'>\n            <ListItemText>\n              <Typography variant='caption' color='textSecondary'>\n                <Link\n                  href='https://github.com/xavierbriole/coronavirus-france'\n                  target='_blank'\n                >\n                  GitHub\n                </Link>\n              </Typography>\n            </ListItemText>\n          </ListItem>\n          <ListItem key='credits'>\n            <ListItemText>\n              <Typography variant='caption' color='textSecondary'>\n                <Link href='https://www.esrifrance.fr/' target='_blank'>\n                  Carte réalisée par Esri France\n                </Link>\n              </Typography>\n            </ListItemText>\n          </ListItem>\n        </List>\n      </React.Fragment>\n    )\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport { isMobile } from 'react-device-detect'\n\nexport default class Frame extends React.Component<{}> {\n  render(): React.Node {\n    return (\n      <div\n        className='iframe-wrapper'\n        dangerouslySetInnerHTML={{\n          __html: `<iframe src=\"https://mapthenews.maps.arcgis.com/apps/opsdashboard/index.html#/${\n            isMobile\n              ? 'bae8aaa7a0b14261b4621c31db410c44'\n              : '5df19abcf8714bc590a3b143e14a548c'\n          }\" class=\"iframe\">`,\n        }}\n      ></div>\n    )\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport ReactGA from 'react-ga'\nimport { Panel } from '../MuiComponents'\nimport FAQData from '../FAQData.json'\n\nexport default class FAQ extends React.Component<{}> {\n  onQuestionClick(title: string) {\n    ReactGA.event({ category: 'user', action: 'question-click', label: title })\n  }\n\n  render(): React.Node {\n    return (\n      <Panel\n        datas={FAQData.faq}\n        onPanelOpen={this.onQuestionClick.bind(this)}\n      />\n    )\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport {\n  EmailShareButton,\n  EmailIcon,\n  FacebookShareButton,\n  FacebookIcon,\n  LinkedinShareButton,\n  LinkedinIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from 'react-share'\nimport { Grid, Input, IconButton, Snackbar, Container } from '@material-ui/core'\nimport { FileCopy } from '@material-ui/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport ReactGA from 'react-ga'\n\ntype State = {|\n  displaySnack: boolean,\n|}\n\nexport default class Share extends React.Component<{}, State> {\n  constructor(props: {}) {\n    super(props)\n\n    this.state = { displaySnack: false }\n  }\n\n  handleCopyButton() {\n    this.setState({ displaySnack: true })\n\n    ReactGA.event({\n      category: 'user',\n      action: 'copy-to-clipboard-click',\n    })\n  }\n\n  handleClose() {\n    this.setState({ displaySnack: false })\n  }\n\n  render(): React.Node {\n    const { displaySnack } = this.state\n\n    return (\n      <Container style={{ padding: 20 }}>\n        <Grid\n          direction='column'\n          alignContent='center'\n          alignItems='center'\n          container\n        >\n          <Grid item>\n            <CopyToClipboard\n              text={window.location}\n              onCopy={this.handleCopyButton.bind(this)}\n            >\n              <Input\n                value={window.location}\n                disabled\n                style={{ color: '#ffffff' }}\n              />\n            </CopyToClipboard>\n            <CopyToClipboard\n              text={window.location}\n              onCopy={this.handleCopyButton.bind(this)}\n            >\n              <IconButton color='secondary'>\n                <FileCopy />\n              </IconButton>\n            </CopyToClipboard>\n            <Snackbar\n              open={displaySnack}\n              onClose={this.handleClose.bind(this)}\n              message='Copié dans le presse-papier !'\n              autoHideDuration={3000}\n            />\n          </Grid>\n          <Grid item>\n            <IconButton>\n              <EmailShareButton\n                url={window.location}\n                subject='Coronavirus en France - Carte en temps réel'\n                body='Coronavirus: évolution de la situation en direct en France et dans les DOM-TOM'\n              >\n                <EmailIcon size={32} round />\n              </EmailShareButton>\n            </IconButton>\n            <IconButton>\n              <FacebookShareButton url={window.location}>\n                <FacebookIcon size={32} round />\n              </FacebookShareButton>\n            </IconButton>\n            <IconButton>\n              <LinkedinShareButton url={window.location}>\n                <LinkedinIcon size={32} round />\n              </LinkedinShareButton>\n            </IconButton>\n            <IconButton>\n              <TwitterShareButton url={window.location}>\n                <TwitterIcon size={32} round />\n              </TwitterShareButton>\n            </IconButton>\n            <IconButton>\n              <WhatsappShareButton url={window.location}>\n                <WhatsappIcon size={32} round />\n              </WhatsappShareButton>\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Container>\n    )\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport { List } from '../MuiComponents'\nimport ReactGA from 'react-ga'\n\nexport default class Attestation extends React.Component<{}> {\n  onItemClick(subheaderId: string, contentId: string, url: string) {\n    ReactGA.event({\n      category: 'user',\n      action: 'download',\n      label: `${subheaderId === '' ? '' : `${subheaderId}-`}${contentId}`,\n    })\n\n    window.open(url)\n  }\n\n  render(): React.Node {\n    return (\n      <List\n        onClick={this.onItemClick.bind(this)}\n        items={[\n          {\n            id: 'couvre-feu',\n            subheaderTitle: 'Couvre-feu',\n            contents: [\n              {\n                id: 'deplacement-derogatoire',\n                title: 'Attestation de déplacement dérogatoire',\n                updated: '17 octobre 2020',\n                url: `${window.location}files/couvre-feu/attestation-de-deplacement-derogatoire.pdf`,\n              },\n              {\n                id: 'deplacement-professionnel',\n                title: 'Justificatif de déplacement professionnel',\n                updated: '17 octobre 2020',\n                url: `${window.location}files/couvre-feu/justificatif-de-deplacement-professionnel.pdf`,\n              },\n            ],\n          },\n          {\n            id: '',\n            subheaderTitle: 'Confinement',\n            contents: [\n              {\n                id: 'deplacement-derogatoire',\n                title: 'Attestation de déplacement dérogatoire',\n                updated: '15 avril 2020',\n                url: `${window.location}files/confinement/attestation-deplacement-fr.pdf`,\n              },\n              {\n                id: 'deplacement-professionnel',\n                title: 'Justificatif de déplacement professionnel',\n                updated: '15 avril 2020',\n                url: `${window.location}files/confinement/Justificatif_de_deplacement_professionnel.pdf`,\n              },\n            ],\n          },\n        ]}\n      />\n    )\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport ReactGA from 'react-ga'\nimport { Theme, NavigationBar, Dialog, Snack } from '../MuiComponents'\nimport Menu from './Menu'\nimport Frame from './Frame'\nimport FAQ from './FAQ'\nimport Share from './Share'\nimport Attestation from './Attestation'\nimport { Link } from '@material-ui/core'\nimport CookieNotice from 'react-cookienotice'\n\ntype State = {|\n  modalOpen: boolean,\n  currentItem?: { id: string, title: string },\n|}\n\nexport default class App extends React.Component<{}, State> {\n  UA: string\n\n  constructor(props: {}) {\n    super(props)\n\n    this.UA = 'UA-127796557-2'\n\n    this.state = { modalOpen: false, currentItem: undefined }\n  }\n\n  componentDidMount() {\n    if (\n      window.location.hostname === 'localhost' ||\n      window.location.hostname === '127.0.0.1'\n    ) {\n      window[`ga-disable-${this.UA}`] = true\n    }\n\n    ReactGA.initialize(this.UA)\n    ReactGA.pageview(window.location.pathname)\n  }\n\n  handleModalOpen(item: { id: string, title: string }) {\n    this.setState({\n      modalOpen: true,\n      currentItem: { id: item.id, title: item.title },\n    })\n\n    ReactGA.event({ category: 'user', action: 'open-modal', label: item.id })\n  }\n\n  handleModalClose() {\n    this.setState({ modalOpen: false, currentItem: undefined })\n\n    ReactGA.event({ category: 'user', action: 'close-modal' })\n  }\n\n  renderModalContent(): ?React.Node {\n    const { currentItem } = this.state\n\n    if (currentItem === undefined) {\n      return null\n    }\n\n    switch (currentItem.id) {\n      case 'faq':\n        return <FAQ />\n      case 'share':\n        return <Share />\n      case 'attest':\n        return <Attestation />\n      default:\n        break\n    }\n  }\n\n  render(): React.Node {\n    const { modalOpen, currentItem } = this.state\n\n    return (\n      <Theme>\n        <React.Fragment>\n          <Dialog\n            title={currentItem ? currentItem.title : ''}\n            open={modalOpen}\n            onClose={this.handleModalClose.bind(this)}\n          >\n            {this.renderModalContent()}\n          </Dialog>\n          <NavigationBar\n            title={\n              <Link href={window.location} color='secondary' underline='none'>\n                Coronavirus en France\n                <span role='img' aria-label='halloween' style={{ margin: 10 }}>\n                  🎃\n                </span>\n              </Link>\n            }\n            menu={<Menu onItemClick={this.handleModalOpen.bind(this)} />}\n          >\n            <Frame />\n          </NavigationBar>\n          <CookieNotice />\n          <Snack message='Les attestations de déplacement pour le couvre-feu sont disponibles ! Rendez-vous dans le menu \"Attestations\"' />\n        </React.Fragment>\n      </Theme>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// @flow\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './UI/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}